% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/updateShinyTreeMenu.R
\name{updateShinyTreeMenu}
\alias{updateShinyTreeMenu}
\title{Update the ShinyTreeMenu}
\usage{
updateShinyTreeMenu(treedata, treemenu_open, level_icons)
}
\arguments{
\item{treedata}{data.table; treedata - see details for more}

\item{treemenu_open}{reactive expression; Id belonging to the branch you want to open.}

\item{level_icons}{character; Names of fa-icons to use for the tree - see [ShinyTreeMenuHTML()] for more details.}
}
\value{
A HTML class character containing the tree menu
}
\description{
updateShinyTreeMenu() updates the tree menu, when a new level is selected
}
\examples{

# Create a reactive expression holding the treedata

treedata <- reactive({
   treedata <-
     data.table::data.table(
       level1_id = 1:4,
       level1_name = c("Base 1", "Base 2", "Base 3", "Base 4"),
       level2_id = list(1:10,
                        1:5,
                        1:5,
                        1:10),
       level2_name = list(paste("Branch 1 no", 1:10),
                          paste("Branch 2 no", 1:5),
                          paste("Branch 3 no", 1:5),
                          paste("Branch 4 no", 1:10)))


   treedata <-
     treedata[, list(level2_id = unlist(level2_id), level2_name = unlist(level2_name)),
              by = c("level1_id", "level1_name")]

   return(treedata

})


# Wrap the renderShinyTreeMenu function in a shiny callModule

shiny::callModule(ShinyTreeMenu::renderShinyTreeMenu,
                  id = "treemenu",
                  treedata = treedata,
                  level_icons = c("tree", "pagelines"))


# To update your ShinyTreeMenu on selection use:

ShinyTreeMenu::updateShinyTreeMenu(
  treedata = treedata,
  treemenu_open = reactive({input$treemenu_open}),
  level_icons = c("tree", "pagelines"))


}
\seealso{
\code{\link{renderShinyTreeMenu}} and \code{\link{ShinyTreeMenuHTML}}
}
